{"version":3,"file":"copy-clipboard.min.js.map","sources":["copy-clipboard.js"],"sourcesContent":["/**\n    MIT License\n\n    Copyright 2023 Carlos A. (https://github.com/dealfonso)\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n*/\n\n(function (exports) {\n\tif (typeof exports === \"undefined\") {\n\t\tvar exports = {};\n\t}\n\tconst VERSION = \"1.0.2\";\n\tconst DEFAULT_OPTIONS = {\n\t\ttarget: null,\n\t\ttargetChildren: null,\n\t\tmultiple: true,\n\t\tjoinText: \"\\n\",\n\t\timages: true,\n\t\tvalue: null,\n\t\tsuppressWarnings: true,\n\t\tdebug: false\n\t};\n\n\tfunction snakeToCamel(str) {\n\t\tlet stage1 = str.split(\"-\").map(v => v.charAt(0).toUpperCase() + v.slice(1)).join(\"\");\n\t\treturn stage1.charAt(0).toLowerCase() + stage1.slice(1);\n\t}\n\n\tfunction mergeOptions(target, options = {}, prefix = \"\") {\n\t\tif (prefix != \"\") {\n\t\t\tprefix = prefix + \"-\";\n\t\t}\n\t\tlet resultingOptions = {};\n\t\tfor (const key in options) {\n\t\t\tlet optionName = snakeToCamel(`${prefix}${key}`);\n\t\t\tif (optionName in target.dataset) {\n\t\t\t\tresultingOptions[key] = target.dataset[optionName];\n\t\t\t} else {\n\t\t\t\tresultingOptions[key] = options[key];\n\t\t\t}\n\t\t}\n\t\treturn resultingOptions;\n\t}\n\n\tfunction boolVal(value) {\n\t\tif (!!value === value) {\n\t\t\treturn value;\n\t\t}\n\t\tif (+value === value) {\n\t\t\tif (value == 0) return false;\n\t\t\treturn true;\n\t\t}\n\t\tif (\"\" + value === value) {\n\t\t\treturn value.toLowerCase() === \"true\";\n\t\t}\n\t\treturn !!value;\n\t}\n\tasync function copyTextToClipboard(text) {\n\t\ttry {\n\t\t\tawait navigator.clipboard.writeText(text);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Failed to copy text to clipboard:\", err);\n\t\t}\n\t}\n\tasync function copyImageToClipboard(imageElement) {\n\t\tasync function getImage(imageElement, changeCrossOrigin = false) {\n\t\t\tasync function getBlobFromImage(image) {\n\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\t\t\t\tcanvas.width = image.naturalWidth || image.width;\n\t\t\t\tcanvas.height = image.naturalHeight || image.height;\n\t\t\t\tctx.drawImage(image, 0, 0);\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tcanvas.toBlob(blob => {\n\t\t\t\t\t\tcanvas.remove();\n\t\t\t\t\t\tif (blob) {\n\t\t\t\t\t\t\tresolve(blob);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(\"Failed to create blob from canvas\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, \"image/png\");\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (typeof imageElement === \"string\") {\n\t\t\t\tlet image = new Image();\n\t\t\t\timage.crossOrigin = \"anonymous\";\n\t\t\t\timage.src = imageElement;\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\timage.onload = () => getBlobFromImage(image).then(resolve).catch(reject);\n\t\t\t\t\timage.onerror = err => reject(new Error(`Failed to load image: ${err.message}`));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!(imageElement instanceof HTMLImageElement)) {\n\t\t\t\tthrow new Error(\"Provided element is not an image\");\n\t\t\t}\n\t\t\tlet image = imageElement;\n\t\t\tif (changeCrossOrigin) {\n\t\t\t\timage = new Image();\n\t\t\t\timage.crossOrigin = \"anonymous\";\n\t\t\t\timage.src = imageElement.src;\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\timage.onload = () => getBlobFromImage(image).then(resolve).catch(reject);\n\t\t\t\t\timage.onerror = err => reject(new Error(`Failed to load image: ${err.message}`));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn getBlobFromImage(image);\n\t\t\t}\n\t\t}\n\t\tlet blob = null;\n\t\ttry {\n\t\t\tblob = await getImage(imageElement, false);\n\t\t} catch (err) {\n\t\t\tconsole.warn(\"Failed to get image without cross-origin; we'll try to download it again\\n\", err);\n\t\t}\n\t\ttry {\n\t\t\tif (!blob) {\n\t\t\t\tblob = await getImage(imageElement, true);\n\t\t\t}\n\t\t\tif (!blob) {\n\t\t\t\tthrow new Error(\"Blob creation failed\");\n\t\t\t}\n\t\t\tlet item = new ClipboardItem({\n\t\t\t\t[blob.type]: blob\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tawait navigator.clipboard.write([item]);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"Failed to copy image to clipboard:\", err);\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tconsole.error(\"Failed to fetch image:\", err_1);\n\t\t}\n\t}\n\n\tfunction copyClipboard(element, options = {}) {\n\t\toptions = Object.assign({}, DEFAULT_OPTIONS, options);\n\t\tlet WARNING = x => x;\n\t\tlet DEBUG = x => x;\n\t\tif (!boolVal(options.suppressWarnings)) {\n\t\t\tWARNING = (...x) => console.warn(...x);\n\t\t}\n\t\tif (boolVal(options.debug)) {\n\t\t\tDEBUG = (...x) => console.log(...x);\n\t\t}\n\t\tlet elements = [];\n\t\tif (typeof element === \"string\") {\n\t\t\telements = document.querySelectorAll(element);\n\t\t} else if (element instanceof HTMLElement) {\n\t\t\telements = [element];\n\t\t}\n\t\tif (elements.length === 0) {\n\t\t\tWARNING(\"No elements found to make copyable:\", element);\n\t\t\treturn;\n\t\t}\n\t\tif (elements instanceof NodeList || elements instanceof HTMLCollection) {\n\t\t\telements = Array.from(elements);\n\t\t} else if (!Array.isArray(elements)) {\n\t\t\telements = [elements];\n\t\t}\n\t\tfor (const copyable of elements) {\n\t\t\tlet elementOptions = mergeOptions(copyable, options, \"copy\");\n\t\t\tWARNING = x => x;\n\t\t\tif (!boolVal(elementOptions.suppressWarnings)) {\n\t\t\t\tWARNING = x => console.warn(x);\n\t\t\t}\n\t\t\tDEBUG = x => x;\n\t\t\tif (boolVal(elementOptions.debug)) {\n\t\t\t\tDEBUG = (...x) => console.log(...x);\n\t\t\t}\n\t\t\tif (!elementOptions.target && !elementOptions.targetChildren && !elementOptions.value) {\n\t\t\t\tWARNING(\"Nothing to copy for element:\", copyable);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (copyable._copyClipboard) {\n\t\t\t\tcopyable.removeEventListener(\"click\", copyable._copyClipboard.copyHandler);\n\t\t\t\tdelete copyable._copyClipboard;\n\t\t\t}\n\t\t\tconst copyHandler = function () {\n\t\t\t\tlet targetElements = [];\n\t\t\t\tif (elementOptions.value) {\n\t\t\t\t\tif (options.images && options.value instanceof File && options.value.type.startsWith(\"image/\")) {\n\t\t\t\t\t\tlet item = new ClipboardItem({\n\t\t\t\t\t\t\t[options.value.type]: options.value\n\t\t\t\t\t\t});\n\t\t\t\t\t\tnavigator.clipboard.write([item]).then(() => {\n\t\t\t\t\t\t\tDEBUG(`Image copied from file to clipboard.`);\n\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\tconsole.error(\"Failed to copy image:\", err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (typeof options.value === \"string\" || typeof options.value === \"number\") {\n\t\t\t\t\t\tcopyTextToClipboard(options.value);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (options.value instanceof HTMLElement) {\n\t\t\t\t\t\tcopyTextToClipboard(options.value.innerText || options.value.textContent);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (Array.isArray(options.value)) {\n\t\t\t\t\t\tcopyTextToClipboard(options.value.join(\"\\n\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tWARNING(`Unsupported value type for copying: ${typeof options.value}. Expected string, number, HTMLElement or array.`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet targets = elementOptions.target ? document.querySelectorAll(elementOptions.target) : [];\n\t\t\t\t\tlet targetChildren = elementOptions.targetChildren ? copyable.querySelectorAll(elementOptions.targetChildren) : [];\n\t\t\t\t\ttargets = [...targets, ...targetChildren];\n\t\t\t\t\tif (targets.length === 0) {\n\t\t\t\t\t\tWARNING(`No target elements found for selector: ${elementOptions.target} or children selector: ${elementOptions.targetChildren}.`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!boolVal(elementOptions.multiple)) {\n\t\t\t\t\t\ttargetElements = [targets[0]];\n\t\t\t\t\t\tDEBUG(`Copying only the first target element: ${targetElements[0]}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttargetElements = Array.from(targets);\n\t\t\t\t\t\tDEBUG(`Copying all target elements: `, targetElements);\n\t\t\t\t\t}\n\t\t\t\t\tlet resultingTexts = [];\n\t\t\t\t\tfor (const targetElement of targetElements) {\n\t\t\t\t\t\tif (boolVal(elementOptions.images) && targetElement.tagName.toLowerCase() === \"img\") {\n\t\t\t\t\t\t\tcopyImageToClipboard(targetElement);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (targetElement.tagName.toLowerCase() === \"input\" || targetElement.tagName.toLowerCase() === \"textarea\") {\n\t\t\t\t\t\t\t\tresultingTexts.push(targetElement.value || \"\");\n\t\t\t\t\t\t\t} else if (targetElement.tagName.toLowerCase() === \"select\") {\n\t\t\t\t\t\t\t\tresultingTexts.push(targetElement.options[targetElement.selectedIndex].text || \"\");\n\t\t\t\t\t\t\t} else if (targetElement.tagName.toLowerCase() === \"img\") {\n\t\t\t\t\t\t\t\tresultingTexts.push(targetElement.alt || targetElement.title || targetElement.src || \"\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresultingTexts.push(targetElement.innerText || targetElement.textContent || targetElement.value || targetElement.text || targetElement.alt || \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (resultingTexts.length > 0) {\n\t\t\t\t\t\tcopyTextToClipboard(resultingTexts.join(elementOptions.joinText));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tcopyable._copyClipboard = {\n\t\t\t\toptions: elementOptions,\n\t\t\t\tcopyHandler: copyHandler,\n\t\t\t\tversion: VERSION\n\t\t\t};\n\t\t\tcopyable.addEventListener(\"click\", copyHandler);\n\t\t}\n\t}\n\n\tfunction handlePaste(event, options = {}) {\n\t\tconst DEFAULT_OPTIONS = {\n\t\t\tonPasteImage: file => {},\n\t\t\tonPasteText: text => {},\n\t\t\tonError: error => console.error(error)\n\t\t};\n\t\toptions = Object.assign({}, DEFAULT_OPTIONS, options);\n\t\tlet clipboardData = event.clipboardData || window.clipboardData;\n\t\tif (!clipboardData) {\n\t\t\tif (typeof options.onError === \"function\") {\n\t\t\t\toptions.onError(\"No clipboard data available. Please ensure you have copied something to the clipboard before pasting.\");\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (clipboardData.items) {\n\t\t\tfor (var i = 0; i < clipboardData.items.length; i++) {\n\t\t\t\tvar item = clipboardData.items[i];\n\t\t\t\tif (item.kind === \"file\" && item.type.startsWith(\"image/\")) {\n\t\t\t\t\tvar file = item.getAsFile();\n\t\t\t\t\tif (!file) {\n\t\t\t\t\t\tif (typeof options.onError === \"function\") {\n\t\t\t\t\t\t\toptions.onError(\"No file found in clipboard data. Please ensure you have copied an image to the clipboard before pasting.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof options.onPasteImage === \"function\") {\n\t\t\t\t\t\toptions.onPasteImage(file);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (item.kind === \"string\" && item.type === \"text/plain\") {\n\t\t\t\t\titem.getAsString(function (text) {\n\t\t\t\t\t\tif (typeof options.onPasteText === \"function\") {\n\t\t\t\t\t\t\toptions.onPasteText(text);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar pastedData = clipboardData.getData(\"Text\");\n\t\t\tif (pastedData) {\n\t\t\t\tif (typeof options.onPasteText === \"function\") {\n\t\t\t\t\toptions.onPasteText(pastedData);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (typeof options.onError === \"function\") {\n\t\t\t\t\toptions.onError(\"No text data found in clipboard data. Please ensure you have copied text to the clipboard before pasting.\");\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\tnavigator.permissions.query({\n\t\tname: \"clipboard-write\"\n\t}).then(result => {\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\n\t\t\texports.copyClipboard = copyClipboard;\n\t\t} else {\n\t\t\tconsole.warn(\"Clipboard write permission is not granted. Cannot make elements copyable.\");\n\t\t\texports.copyClipboard = function () {\n\t\t\t\tconsole.warn(\"Clipboard write permission is not granted. Cannot make elements copyable.\");\n\t\t\t};\n\t\t}\n\t\texports.copyClipboard.version = VERSION;\n\t\texports.copyClipboard.copyTextToClipboard = copyTextToClipboard;\n\t\texports.copyClipboard.copyImageToClipboard = copyImageToClipboard;\n\t\texports.copyClipboard.handlePaste = handlePaste;\n\t});\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\tconst copyableElements = document.querySelectorAll(\"[data-copy-target],[data-copy-value],[data-copy-target-children]\");\n\t\tcopyableElements.forEach(element => {\n\t\t\tconst options = mergeOptions(element, DEFAULT_OPTIONS, \"copy\");\n\t\t\tcopyClipboard(element, options);\n\t\t});\n\t});\n})(window);\n"],"names":["exports","VERSION","DEFAULT_OPTIONS","target","targetChildren","multiple","joinText","images","value","suppressWarnings","debug","snakeToCamel","str","let","stage1","split","map","v","charAt","toUpperCase","slice","join","toLowerCase","mergeOptions","options","prefix","resultingOptions","key","optionName","dataset","boolVal","async","copyTextToClipboard","text","await","navigator","clipboard","writeText","err","console","error","copyImageToClipboard","imageElement","getImage","changeCrossOrigin","getBlobFromImage","image","canvas","document","createElement","ctx","getContext","width","naturalWidth","height","naturalHeight","drawImage","Promise","resolve","reject","toBlob","blob","remove","Error","Image","crossOrigin","src","onload","then","catch","onerror","message","HTMLImageElement","warn","item","ClipboardItem","type","write","err_1","copyClipboard","element","Object","assign","WARNING","x","DEBUG","log","elements","querySelectorAll","HTMLElement","length","NodeList","HTMLCollection","Array","from","isArray","copyable","elementOptions","_copyClipboard","removeEventListener","copyHandler","targetElements","File","startsWith","innerText","textContent","targets","resultingTexts","targetElement","tagName","push","selectedIndex","alt","title","version","addEventListener","handlePaste","event","onPasteImage","file","onPasteText","onError","clipboardData","window","items","i","kind","getAsFile","getAsString","pastedData","getData","permissions","query","name","result","state","copyableElements","forEach"],"mappings":"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"}